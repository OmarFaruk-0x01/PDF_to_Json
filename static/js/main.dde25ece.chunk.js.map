{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["FilePreview","item","removeHandle","pdfJson","currentStatus","React","useState","open","setOpen","id","style","display","gridTemplateColumns","gridAutoFlow","gridTemplateRows","ListItem","className","onClick","flex","justifyItems","justifyContent","flexDirection","alignItems","ListItemIcon","Icon","ListItemText","primary","name","slice","ListItemButton","sx","App","FilePDF","setFilePDF","PDFJson","setPDFJson","setCurrentStatus","setErrorMessage","successCallBack","useCallback","data","selectFile","failedCallBack","Container","component","width","Box","marginTop","noValidate","mt","Button","type","fullWidth","variant","mb","mr","onChange","files","target","accept","opacity","position","Divider","minHeight","maxWidth","backgroundColor","overflowX","paddingTop","borderColor","src","collapsed","disabled","undefined","formData","FormData","append","Axios","post","BASEURL","headers","then","catch","err","console","log","CircularProgress","size","value","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAmBA,SAASA,EAAT,GAAsE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,aAAwC,KAA1BC,QAA0B,EAAjBC,cAC1BC,IAAMC,UAAS,IAD4B,mBAC5DC,EAD4D,KACtDC,EADsD,KAOnE,OACE,sBACEC,GAAG,cACHC,MAAO,CACLC,QAAS,OACTC,oBAAqB,UACrBC,aAAc,SACdC,iBAAkB,OANtB,UASE,eAACC,EAAA,EAAD,CACEC,UAAU,UACVC,QAhBc,WAClBT,GAASD,IAgBLG,MAAO,CACLQ,KAAM,EACNC,aAAc,SACdC,eAAgB,iBANpB,UASE,sBACEV,MAAO,CACLQ,KAAM,EACNP,QAAS,OACTU,cAAe,MACfC,WAAY,UALhB,UAQE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,+BAEF,cAACC,EAAA,EAAD,CACET,UAAU,WACVU,QAASzB,EAAK0B,KAAKC,MAAM,EAAG,IAAM,WAGtC,qBACElB,MAAO,CACLQ,KAAM,EACNP,QAAS,OACTU,cAAe,MACfC,WAAY,SACZF,eAAgB,iBAItB,cAACS,EAAA,EAAD,CACEZ,QAASf,EACT4B,GAAI,CACFZ,KAAM,EACNI,WAAY,SACZF,eAAgB,UALpB,SAQE,cAACG,EAAA,EAAD,CACEb,MAAO,CAAEY,WAAY,SAAUF,eAAgB,UADjD,SAGE,cAACI,EAAA,EAAD,4BAkKKO,MA3Jf,WAAgB,IAAD,EACiB1B,IAAMC,SAAS,MADhC,mBACN0B,EADM,KACGC,EADH,OAEiB5B,IAAMC,SAAS,MAFhC,mBAEN4B,EAFM,KAEGC,EAFH,OAG6B9B,IAAMC,SAAS,MAH5C,mBAGNF,EAHM,KAGSgC,EAHT,OAI2B/B,IAAMC,SAAS,IAJ1C,mBAIQ+B,GAJR,WAOPC,EAAkBjC,IAAMkC,aAAY,SAACC,GACzCJ,EAAiB,GACjBD,EAAWK,KACV,IACGC,EAAapC,IAAMkC,aAAY,SAACC,GACpCJ,EAAiB,GACjBD,EAAW,MACXF,EAAWO,KACV,IACGE,EAAiBrC,IAAMkC,aAAY,SAACC,GACxCJ,EAAiB,GACjBD,EAAW,IACXE,EAAgBG,KACf,IAkBH,OACE,cAACG,EAAA,EAAD,CAAWC,UAAU,OAAOlC,MAAO,CAAEmC,MAAO,QAA5C,SACE,eAACC,EAAA,EAAD,CACEhB,GAAI,CACFiB,UAAW,EACXpC,QAAS,OACTU,cAAe,SACfC,WAAY,UALhB,UAQE,cAACwB,EAAA,EAAD,CACEF,UAAU,OACV5B,UAAU,SACVgC,YAAU,EACVlB,GAAI,CACFmB,GAAI,EACJJ,MAAO,OAEPvB,WAAY,SACZF,eAAgB,iBATpB,SAYE,eAAC8B,EAAA,EAAD,CACElC,UAAU,OACVmC,KAAK,SACLC,WAAS,EACTC,QAAQ,WACRvB,GAAI,CACFmB,GAAI,EACJK,GAAI,EACJC,GAAI,EACJV,MAAO,SATX,UAYE,uBACEW,SAAU,YAA4B,IAAfC,EAAc,EAAxBC,OAAUD,MACrBhB,EAAWgB,EAAMxD,KAAK,KAExB0D,OAAO,kBACPR,KAAK,OACLzC,MAAO,CAAEkD,QAAS,EAAGC,SAAU,WAAYhB,MAAO,UAlBtD,mBAuBF,eAACC,EAAA,EAAD,CACEF,UAAU,MACVd,GAAI,CACFmB,GAAI,EACJJ,MAAO,OAEPvB,WAAY,SACZF,eAAgB,iBAPpB,UAUE,cAAC0C,EAAA,EAAD,IAEC9B,GACC,cAAChC,EAAD,CAAaE,aAAc,kBAAM+B,EAAW,OAAOhC,KAAM+B,IAG3D,cAAC8B,EAAA,EAAD,OAEF,qBACEpD,MAAO,CACLmC,MAAO,OACPkB,UAAW,IACXC,SAAU,OACVC,gBAAiB,mBAEjBC,UAAW,SACXC,WAAY,GAEZC,YAAa,QAVjB,SAaGlC,GAAW,cAAC,IAAD,CAAWmC,IAAKnC,EAASoC,WAAW,MAElD,eAACpB,EAAA,EAAD,CACElC,UAAU,OACVuD,cAAqBC,GAAXxC,GAAmC,MAAXA,EAClCf,QAjGW,WACjB,IAAMwD,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAO3C,GACvBI,EAAiB,GACjBwC,IAAMC,KAAKC,+CAAsBL,EAAU,CACzCM,QAAS,CAAE,eAAgB,yBAE1BC,MAAK,SAACxC,GACLF,EAAgBE,EAAKA,KAAKA,SAE3ByC,OAAM,SAACC,GACNxC,EAAewC,GACfC,QAAQC,IAAI,UAAWF,OAsFrB9B,WAAS,EACTC,QAAQ,YACRvB,GAAI,CACFmB,GAAI,EACJK,GAAI,EACJT,MAAO,QACPoB,gBACmB,GAAjB7D,EACI,cACiB,GAAjBA,EACA,QACiB,GAAjBA,EACA,MACA,QAjBV,UAoBoB,MAAjBA,EAAwB,kBAnIlB,CAAC,QAAS,cAAe,WAAY,UAmIQA,GAElC,GAAjBA,EACC,qCACE,sBAAMM,MAAO,CAAEmC,MAAO,MACtB,cAACwC,EAAA,EAAD,CACEC,KAAM,GACNC,MAAO,IACPC,MAAM,UACN9E,MAAO,CAAE8E,MAAO,aAGlB,cCjOCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.dde25ece.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Container from \"@mui/material/Container\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport Icon from \"@mui/material/Icon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Collapse from \"@mui/material/Collapse\";\nimport List from \"@mui/material/List\";\nimport ReactJson from \"react-json-view\";\nimport { Divider, ListItem, Typography } from \"@mui/material\";\nimport Axios, { CancelToken } from \"axios\";\n\nconst BASEURL = \"https://pdf-to-json-v1.herokuapp.com\";\n\nfunction FilePreview({ item, removeHandle, pdfJson, currentStatus }) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div\n      id=\"filepreview\"\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"5fr 0fr\",\n        gridAutoFlow: \"column\",\n        gridTemplateRows: \"1fr\",\n      }}\n    >\n      <ListItem\n        className=\"nameBtn\"\n        onClick={handleClick}\n        style={{\n          flex: 1,\n          justifyItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div\n          style={{\n            flex: 2,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n          }}\n        >\n          <ListItemIcon>\n            <Icon>picture_as_pdf</Icon>\n          </ListItemIcon>\n          <ListItemText\n            className=\"filename\"\n            primary={item.name.slice(0, 30) + \"...\"}\n          />\n        </div>\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          }}\n        ></div>\n      </ListItem>\n      <ListItemButton\n        onClick={removeHandle}\n        sx={{\n          flex: 0,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <ListItemIcon\n          style={{ alignItems: \"center\", justifyContent: \"center\" }}\n        >\n          <Icon>delete</Icon>\n        </ListItemIcon>\n      </ListItemButton>\n    </div>\n  );\n}\n\nfunction App() {\n  const [FilePDF, setFilePDF] = React.useState(null);\n  const [PDFJson, setPDFJson] = React.useState(null);\n  const [currentStatus, setCurrentStatus] = React.useState(null);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const status = [\"Start\", \"Proccessing\", \"Finished\", \"Failed\"];\n\n  const successCallBack = React.useCallback((data) => {\n    setCurrentStatus(2);\n    setPDFJson(data);\n  }, []);\n  const selectFile = React.useCallback((data) => {\n    setCurrentStatus(0);\n    setPDFJson(null);\n    setFilePDF(data);\n  }, []);\n  const failedCallBack = React.useCallback((data) => {\n    setCurrentStatus(3);\n    setPDFJson({});\n    setErrorMessage(data);\n  }, []);\n\n  const uploadFile = () => {\n    const formData = new FormData();\n    formData.append(\"pdf\", FilePDF);\n    setCurrentStatus(1);\n    Axios.post(BASEURL + \"/getjson\", formData, {\n      headers: { \"Content-Type\": \"multipart/form-data\" },\n    })\n      .then((data) => {\n        successCallBack(data.data.data);\n      })\n      .catch((err) => {\n        failedCallBack(err);\n        console.log(\"Error: \", err);\n      });\n  };\n\n  return (\n    <Container component=\"main\" style={{ width: \"100%\" }}>\n      <Box\n        sx={{\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box\n          component=\"form\"\n          className=\"btnBox\"\n          noValidate\n          sx={{\n            mt: 1,\n            width: \"100%\",\n\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Button\n            className=\"btns\"\n            type=\"button\"\n            fullWidth\n            variant=\"outlined\"\n            sx={{\n              mt: 1,\n              mb: 1,\n              mr: 1,\n              width: \"220px\",\n            }}\n          >\n            <input\n              onChange={({ target: { files } }) => {\n                selectFile(files.item(0));\n              }}\n              accept=\"application/pdf\"\n              type=\"file\"\n              style={{ opacity: 0, position: \"absolute\", width: \"100%\" }}\n            />\n            Upload PDFs\n          </Button>\n        </Box>\n        <Box\n          component=\"div\"\n          sx={{\n            mt: 1,\n            width: \"100%\",\n\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Divider />\n\n          {FilePDF && (\n            <FilePreview removeHandle={() => setFilePDF(null)} item={FilePDF} />\n          )}\n\n          <Divider />\n        </Box>\n        <div\n          style={{\n            width: \"100%\",\n            minHeight: 200,\n            maxWidth: \"100%\",\n            backgroundColor: \"rgb(240,240,240)\",\n\n            overflowX: \"scroll\",\n            paddingTop: 10,\n\n            borderColor: \"#555\",\n          }}\n        >\n          {PDFJson && <ReactJson src={PDFJson} collapsed={false} />}\n        </div>\n        <Button\n          className=\"btns\"\n          disabled={FilePDF == undefined || FilePDF == null}\n          onClick={uploadFile}\n          fullWidth\n          variant=\"contained\"\n          sx={{\n            mt: 1,\n            mb: 1,\n            width: \"320px\",\n            backgroundColor:\n              currentStatus == 0\n                ? \"yellowgreen\"\n                : currentStatus == 2\n                ? \"green\"\n                : currentStatus == 3\n                ? \"red\"\n                : \"#49f\",\n          }}\n        >\n          {currentStatus == null ? \"Convert to JSON\" : status[currentStatus]}\n\n          {currentStatus == 1 ? (\n            <>\n              <span style={{ width: 10 }} />\n              <CircularProgress\n                size={25}\n                value={100}\n                color=\"inherit\"\n                style={{ color: \"#fff\" }}\n              />\n            </>\n          ) : null}\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}